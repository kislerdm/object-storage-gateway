version: "3.7"

services:
  amazin-object-storage-node-1: &object-storage-node
    image: minio/minio
    command: server --console-address ":9001" /tmp/data
    ports:
      - "9001:9001"
      - "9000:9000"
    networks:
      amazin-object-storage:
        # Don't copy those addresses in your application. Use the local docker socket to get them.
        ipv4_address: 169.253.0.2
    environment:
      # Same for the environment variables, use the local docker socket to read it.
      - MINIO_ACCESS_KEY=ring
      - MINIO_SECRET_KEY=treepotato

  amazin-object-storage-node-2:
    <<: *object-storage-node
    ports: [ "9002:9001" ] # You can open localhost:9002 in your browser to debug what objects are on this node.
    networks:
      amazin-object-storage:
        ipv4_address: 169.253.0.3
    environment:
      - MINIO_ACCESS_KEY=maglev
      - MINIO_SECRET_KEY=baconpapaya

  amazin-object-storage-node-3:
    <<: *object-storage-node
    ports: [ "9003:9001" ] # You can open localhost:9003 in your browser to debug what objects are on this node.
    networks:
      amazin-object-storage:
        ipv4_address: 169.253.0.4
    environment:
      - MINIO_ACCESS_KEY=rendezvous
      - MINIO_SECRET_KEY=bluegreen

#  gateway-container-run: # Here, this is where you can configure your gateway.
#    build: .
#    command: sleep 7200
#    ports: [ "3000:3000" ]
#    networks:
#      amazin-object-storage:
#        ipv4_address: 169.253.0.5
#    volumes:
#    - /var/run/docker.sock:/var/run/docker.sock

  gateway-container:
    image: golang:1.21-alpine
    ports: [ "3000:3000" ]
    networks:
      amazin-object-storage:
        ipv4_address: 169.253.0.100
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app

networks:
  amazin-object-storage:
    ipam:
      driver: default
      config:
        - subnet: 169.253.0.0/24
          gateway: 169.253.0.1
